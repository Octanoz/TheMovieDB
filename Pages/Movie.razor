@page "/movie/{id:int}"
@inject TMDBClient TMDB

@if (movieDetails is null)
{
    <MudProgressCircular Color="Color.Default" Indeterminate="true" />
}
else
{
    <PageTitle>@movieDetails.Title</PageTitle>

    <MudBreakpointProvider OnBreakpointChanged="OnBreakpointChanged">
        @if (isMediumToSmallScreen)
        {
            // This block is shown only for screen sizes between Small (exclusive) and Medium (inclusive)
            <MudContainer MaxWidth="MaxWidth.Medium" Class="pa-4 mt-4">
                <MudGrid Spacing="4">
                    <MudItem xs="12" md="4" Class="justify-center">
                        <MudCard Elevation="3">
                            <MudCardMedia Image="@($"https://image.tmdb.org/t/p/w300{movieDetails.PosterPath}")" Height="450" Alt="@($"{movieDetails.Title} poster")" />
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12" md="8">
                        <MudPaper Elevation="0" Class="mud-theme-primary pa-2">
                            <MudText Typo="Typo.h4" Class="mb-3">@movieDetails.Title</MudText>
                            <MudText Typo="Typo.body2">@movieDetails.Overview</MudText>
                        </MudPaper>
                    </MudItem>
                </MudGrid>
            </MudContainer>
        }
        else if (isSmallScreen)
        {
            // This block is shown only for screen sizes up to and including Small
            <MudContainer MaxWidth="MaxWidth.False" Class="pa-4 mt-4">
                <MudGrid Spacing="4">
                    <MudItem xs="12" Class="justify-center">
                        <MudCard Elevation="3">
                            <MudCardMedia Image="@($"https://image.tmdb.org/t/p/w300{movieDetails.PosterPath}")" Height="450" Alt="@($"{movieDetails.Title} poster")" />
                        </MudCard>
                    </MudItem>
                    <MudItem xs="12">
                        <MudPaper Elevation="0" Class="mud-theme-primary pa-2">
                            <MudText Typo="Typo.h4" Class="mb-3">@movieDetails.Title</MudText>
                            <MudText Typo="Typo.body2">@movieDetails.Overview</MudText>
                        </MudPaper>
                    </MudItem>
                </MudGrid>
            </MudContainer>
        }
        else
        {
            // This block is shown for screen sizes larger than Medium
            <MudContainer MaxWidth="MaxWidth.False" Class="pa-0 position-relative">
                <MudPaper Elevation="0" Class="mud-theme-primary overflow-hidden">
                    <MudImage Fluid="true" Src="@($"https://image.tmdb.org/t/p/original{movieDetails.BackdropPath}")" Alt="@($"{movieDetails.Title} backdrop")" Height="500" Style="width: 100%; object-fit: cover; filter: grayscale(75%) blur(2px);" />
                </MudPaper>
                <MudContainer Fixed="true" Class="pa-0" Style="position: absolute; inset: 0; display: flex; align-items: center; justify-content: center; pointer-events: none;">
                    <MudPaper Elevation="0" Class="pa-6 rounded-lg" Style="background: rgba(0, 0, 0, 0.65); backdrop-filter: blur(5px); max-width: 90%; width: 100%; pointer-events: auto;">
                        <MudGrid>
                            <MudItem xs="12" md="4" Class="justify-center">
                                <MudCard Elevation="6">
                                    <MudCardMedia Image="@($"https://image.tmdb.org/t/p/w300{movieDetails.PosterPath}")" Height="450" Alt="@($"{movieDetails.Title} poster")" />
                                </MudCard>
                            </MudItem>
                            <MudItem xs="12" md="8" Class="pa-4">
                                <MudPaper Elevation="0" Style="background-color: transparent;">
                                    <MudText Typo="Typo.h2" Class="mb-4" Style="color: linen;">@movieDetails.Title</MudText>
                                    <MudText Typo="Typo.body1" Style="color: linen;">@movieDetails.Overview</MudText>
                                </MudPaper>
                            </MudItem>
                        </MudGrid>
                    </MudPaper>
                </MudContainer>
            </MudContainer>
        }
    </MudBreakpointProvider>
}

@code {
    [Parameter]
    public int Id { get; set; }

    MovieDetails? movieDetails;
    bool isSmallScreen = false;
    bool isMediumToSmallScreen = false; // New flag for the specific range

    protected override async Task OnInitializedAsync()
    {
        movieDetails = await TMDB.GetMovieDetailsAsync(Id);
    }

    private void OnBreakpointChanged(Breakpoint breakpoint)
    {
        // Check if breakpoint is greater than Small and less than or equal to Medium
        isMediumToSmallScreen = breakpoint > Breakpoint.Sm && breakpoint <= Breakpoint.Md;
        isSmallScreen = breakpoint <= Breakpoint.Sm;
        StateHasChanged();
    }
}